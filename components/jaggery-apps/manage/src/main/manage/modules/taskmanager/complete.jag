<%
include("/jagg/jagg.jag");
var log=new Log();
var ws = require("ws");

var completeTask = function (taskId,taskType,taskName,status,description,username,currentDate,selectedTier) {

log.info("username Is " + username);
log.info("status Is " + status);
log.info("currentDate Is " + currentDate);


try {
    var headers = {"Authorization":"Basic " + session.get("auth"),
               "Content-Type": "application/json"};
    var site = require("/site/conf/site.json");
    var businessProcessEngineUrl = site.workflows.businessProcessEngineBaseUrl;
    var adminApprovalLevel = taskName=='Hub Admin Approval' ? "hubAdminApproval" : taskName=='API Publisher Approval' ? "apiPublisherApproval" : "operatorAdminApproval"
	var body = {
                "action" : "complete",
                "variables" : [
                    {
                      "name" : adminApprovalLevel,
                      "value" : status,
                      "type" : "string"
                    },
                    {
                      "name" : selectedTier,
                      "value" : selectedTier,
                      "type" : "string"
                    },
                    {
                      "name" : 'completedByUser',
                      "value" : username,
                      "type" : "string"
                    },
                    {
                      "name" : 'status',
                      "value" : status,
                      "type" : "string"
                    },
                    {
                      "name" : 'completedOn',
                      "value" : currentDate,
                      "type" : "string"
                    },
                    {
                      "name" : 'description',
                      "value" : description,
                      "type" : "string"
                    },
                    {
                      "name" : 'selectedTier',
                      "value" : selectedTier,
                      "type" : "string"
                    }
                ]};
	var result = post(businessProcessEngineUrl + "runtime/tasks/"+taskId,
	JSON.stringify(body),
	headers, "json").data;
return {
error:false
}

} catch (e) {
log.error("1"+e.toString());
return {
error:true
}
}
};

var getRefId = function (taskId,endpoint,taskType) {
var refId;
try {
var site = require("/site/conf/site.json");
    		var businessProcessEngineUrl = site.workflows.businessProcessEngineBaseUrl;
            var headers = {"Authorization":"Basic " + session.get("auth")};
var workflowRefVariable = get(businessProcessEngineUrl + "runtime/tasks/" +
                    taskId + "/variables/workflowRefId",null, headers,"json" ).data;

refId = workflowRefVariable.value;
log.info("Reference Is" + refId);
return refId;

} catch (e) {
log.error("2"+e.toString());
return 0;
}
};

// Set tier for the specified subscription.
var setSubscriptionTier = function (taskId, taskType, tierId, endpoint) {
	
	var refId = getRefId(taskId, endpoint, taskType);

	var workflow, result;
	workflow = jagg.module("manager").getWorkflowHostObject();
	
	try {
		result = workflow.setSubscriptionTier(refId,tierId);
		if (log.isDebugEnabled()) {
			log.debug("setSubscriptionTier for SUBSCRIPTION_ID : " + refId);
		}
				
		if (result == null) {
			return {error:true};
		} else {
			return {error:false,result:result};
		}
	} catch (e) {
		log.error("3"+e.message);
		return { error:e,result:null};
	}
};

//Set subscription charge rate card. Added by Hiranya on 2014-11-11
var setSubscriptionChargeRate = function (appId, apiId, opName, rateNameNB,operationId) {
	
	var workflow, result;
	workflow = jagg.module("manager").getWorkflowHostObject();
	
	try {
		result = workflow.setSubscriptionChargeRate(appId, apiId, opName, rateNameNB, operationId);
		if (result == null) {
			return {error:true};
		} else {
			return {error:false,result:result};
		}
	} catch (e) {
		log.error("4"+e.message);
		return { error:e,result:null};
	}
};

var setSubscriptionChargeRateNB = function (appId, apiId) {
	
	var workflow, result;
	workflow = jagg.module("manager").getWorkflowHostObject();
	
	try {
		result = workflow.setSubscriptionChargeRateNB(appId, apiId);
		if (result == null) {
			return {error:true};
		} else {
			return {error:false,result:result};
		}
	} catch (e) {
		log.error("5"+e.message);
		return { error:e,result:null};
	}
};
// Set tier for the specified application.
var setApplicationTier = function (taskId, taskType, tierId, endpoint) {
	
	var refId = getRefId(taskId, endpoint, taskType);

	var workflow, result;
	workflow = jagg.module("manager").getWorkflowHostObject();
	   
	try {

		result = workflow.setApplicationTier(refId,tierId);
		log.info("refId"+refId+"tierId"+tierId);
		if (log.isDebugEnabled()) {tierId
			log.debug("setApplicationTier for APPLICATION_ID : " + refId);
		}
				
		if (result == null) {
			return {error:true};
		} else {
			return {error:false,result:result};
		}
	} catch (e) {
		log.error("6"+e.message);
		return { error:e,result:null};
	}
};


%>
