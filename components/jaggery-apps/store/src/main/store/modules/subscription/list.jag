<%
var getAllSubscriptions = function (username, selectedAppName, startSubIndex, endSubIndex)  {
    var result,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();
    try {
			var groupingId = session.get("groupId");
			result = store.getAllSubscriptions(username , selectedAppName, String(startSubIndex), String(endSubIndex),groupingId);
			if (log.isDebugEnabled()) {
				log.debug("getAllSubscriptions : " + stringify(result));
		}
        return {
            error:false,
            result:result
        };
    } catch (e) {
        log.error(e);
        return {
            error:true,
            result:e
        };
    }
};

var getAllSubscriptionsOfApplication = function (username, selectedAppName, startSubIndex, endSubIndex)  {
    var result,
        log = new Log(),
        store = jagg.module("manager").getAPIStoreObj();
    try {
        var groupingId = session.get("groupId");
	    result = store.getAllSubscriptionsOfApplication(username , selectedAppName, String(startSubIndex), String(endSubIndex),groupingId);
	    if (log.isDebugEnabled()) {
            log.debug("getAllSubscriptionsOfApplication : " + stringify(result));
        }
        return {
            error:false,
            result:result
        };
    } catch (e) {
        log.error(e);
        return {
            error:true,
            result:e
        };
    }
};


var getAllSubscriptionsOfApplicationById = function (username, selectedAppId, startSubIndex, endSubIndex)  {
    var result,
    log = new Log(),
    store = jagg.module("manager").getAPIStoreObj();
    try {
        var groupingId = session.get("groupId");
	    result = store.getAllSubscriptionsOfApplicationById(username , selectedAppId, String(startSubIndex), String(endSubIndex),groupingId);
	    if (log.isDebugEnabled()) {
            log.debug("getAllSubscriptionsOfApplicationById : " + stringify(result));
        }
        return {
            error:false,
            result:result
        };
    } catch (e) {
        log.error(e);
        return {
            error:true,
            result:e
        };
    }
};

var getAPISubscriptions = function (api, username) {
    var subscriptions,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        var groupingId = session.get("groupId");
        subscriptions = store.getSubscriptions(api.provider, api.name, api.version, username, groupingId);
        if (log.isDebugEnabled()) {
            log.debug("getSubscriptions : " + stringify(subscriptions));
        }
        return {
            error:false,
            subscriptions:subscriptions
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            subscriptions:null
        };
    }
};

var getAPISubscriptionsForApplication = function (username, appName, groupingId) {
    var subscriptions,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        subscriptions = store.getSubscriptionsByApplication(appName, username, groupingId);
        if (log.isDebugEnabled()) {
            log.debug("getSubscriptions : " + stringify(subscriptions));
        }
        return {
            error:false,
            subscriptions:subscriptions
        };
    } catch (e) {
        log.error(e.message);
        return {
            error : e,
            subscriptions:null
        };
    }
};

var getAllSubscriptionsOfApplicationById = function (username, selectedAppId, startSubIndex, endSubIndex)  {
    var result,
    log = new Log(),
    store = jagg.module("manager").getAPIStoreObj();
    try {
        var groupingId = session.get("groupId");
	    result = store.getAllSubscriptionsOfApplicationById(username , selectedAppId, String(startSubIndex), String(endSubIndex),groupingId);
	    if (log.isDebugEnabled()) {
            log.debug("getAllSubscriptionsOfApplicationById : " + stringify(result));
        }
        return {
            error:false,
            result:result
        };
    } catch (e) {
        log.error(e);
        return {
            error:true,
            result:e
        };
    }
};


var generateClientSdk = function (appName,language,userName,groupId){
    var sdkGen = Packages.org.wso2.carbon.apimgt.impl.APIClientGenerationManager;
    var generator = new sdkGen();
    var object = null;
    var log = new Log();

    try {
        var result = Packages.java.utils.Map;
        result = generator.sdkGeneration(appName,language,userName,groupId);
        if(result!=null){
            var fileName = result.get("fileName");
            var path =  result.get("path");
            return {
                fileName:fileName,
                path:path,
                error:false
            };
        }
        else{
            return {
                message:"App doesn't have any APIs",
                error:true
            };
        }

    } catch (e) {
        log.error(e.message);
        if (e.javaException instanceof org.wso2.carbon.apimgt.impl.APIClientGenerationException){
            return {
                error:true,
                message:e.javaException.getErrorMessage()
            };
        } else {
            return {
                error:true,
                message:"Problem generating the SDK"
            };
        }
    }

};

var getSupportedLanguages = function()  {
    var sdkGen = Packages.org.wso2.carbon.apimgt.impl.APIClientGenerationManager;
    var generator = new sdkGen();
    var log = new Log();
    try {
        var langs = generator.getSupportedSDKLanguages();
        if(langs != null && "null" != langs)   {
            return  {
                langs:langs,
                error:false
            };
        } else  {
            return  {
                message:"No Supported Languages Configured",
                error:true
            };
        }
    } catch (e) {
        log.error(e.message);
        return  {
            error:true,
            message:"Error occurred while getting supported Languages"
        }
    }

};


var getAPISubscriptionsForApplicationById = function (username, appName, groupingId, appId) {
    var subscriptions,
    log = new Log(),
    store = jagg.module("manager").getAPIStoreObj();
    try {
        subscriptions = store.getSubscriptionsByApplication(appName, username, groupingId, appId);
        if (log.isDebugEnabled()) {
            log.debug("getSubscriptions : " + stringify(subscriptions));
        }
        return {
            error:false,
            subscriptions:subscriptions
        };
    } catch (e) {
        log.error(e.message);
        return {
            error : e,
            subscriptions:null
        };
    }
};
%>
