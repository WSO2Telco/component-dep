<%
include("/jagg/jagg.jag");

jagg.block("listing", {
    initializer:function (data) {

    },

    getInputs:function () {
        return {
            "apis":null,
            "currentPage":null,
            "numberOfPages":null
        };
    },

    getOutputs:function () {
        var apis, result,query,error,message, mod,mode,length,user = jagg.getUser();
        var APIUtil = org.wso2.carbon.apimgt.impl.utils.APIUtil;

        query = request.getParameter("query");
        var page = request.getParameter("page");
        var tenantDomain = String(jagg.getTenantDomain());
        if (page == null) {
            page = 1;
        }
        var itemsPerPage;
        if (APIUtil.getApisPerPageInPublisher() == 0) {
            itemsPerPage = 12;
        } else {
            itemsPerPage = APIUtil.getApisPerPageInPublisher();
        }
        var currentPage = page;
        var start = itemsPerPage*(page-1);
        if (query) {
            if (query.indexOf(':') == -1) {
                query = "content:" + query;
            }
            mod = jagg.module("search");
            result = mod.searchAPIs(null,query,String(start),String(itemsPerPage));
            apis = null;
            if (result.response != null) {
                apis = result.response.apis;
                length = result.response.totalLength;
                error = result.error;
                message = result.message;
                mode = "search"
            }

        } else {
            mod = jagg.module("api");
            result = mod.getAllPaginatedAPIs(tenantDomain,String(start),String(itemsPerPage));
            apis = null;
            if (result.response != null) {
                apis = result.response.apis;
                length = result.response.totalLength;
                if (!result.error) {
                    error = result.error;
                } else {
                    error = true;
                }
                message = result.message;
                mode = "listing";
            }
        }
        var itemCount;
        if (apis != null) {
            itemCount = result.totalLength;
            var numberOfPages = itemCount / itemsPerPage;
            if (itemCount % itemsPerPage != 0) {
                numberOfPages++;
            }
            if (numberOfPages < currentPage || currentPage <= 0) {
                currentPage = 1;
            }
        }
        var isCreatePermitted = jagg.getCreatePermitted().permitted;
	var isPublishPermitted = jagg.getPublishPermitted().permitted;
        return {
            "apis":apis,
            "error":error,
            "message":message,
            "currentPage":currentPage,
            "numberOfPages":parseInt(numberOfPages),
            "isCreatePermitted":isCreatePermitted,
	        "isPublishPermitted":isPublishPermitted,
            "mode":mode,
            "totalLength" : parseInt(length)
        }
    },


    getStaticBlocks:function() {
        return [
            "search/api-search"
        ];
    }

});
%>
