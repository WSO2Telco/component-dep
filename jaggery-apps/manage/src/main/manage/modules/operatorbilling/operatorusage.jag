<%
var log = new Log();
function getProviderAPIUsage(subscriberName,period,isNorthbound,operatorName) {
        var usage = [];
        var log = new Log();
        log.info("Starting getProviderAPIUsage for : " + subscriberName + " - " + period + " - "+isNorthbound + ' - '+operatorName);
        var store = jagg.module("manager").getCustomBilling();
        try {
	        usage = store.getAPIUsageforSubscriber(subscriberName,period,isNorthbound,operatorName);
	        if (log.isDebugEnabled()) {
	        	log.debug("getProviderAPIUsage for : " + server);
       		}
			
			if (usage == null) {
	        	return {error:true};
			} else if (usage[0].error) {
				return usage[0];
			} else {
				return {error:false,usage:usage};
			}
		} catch (e) {
		        log.error(e);
		        return { error:true,usage:null};
		}
}

function getSubscribersByOperator(operatorName){
	var log = new Log();
	log.info("Operator Name to list Subscribers: " + stringify(operatorName));
	var billing = jagg.module("manager").getCustomBilling();
	var subscribers = [];
	try {
		subscribers = billing.getSubscribersByOperator(operatorName);
		return {error:false, data : subscribers};

	} catch (e) {
		log.error(e.message);
		return { error:true,message:e.message};
	}
}


function getReportFileContent(subscriberName,period,isNorthbound) {
        var usage = [];
        var log = new Log();
        var store = jagg.module("manager").getCustomBilling();
        try {
	        usage = store.getReportFileContent(subscriberName,period,isNorthbound);
	        if (log.isDebugEnabled()) {
	        	log.debug("getReportFileContent for : " + server);
       		}
			
			if (usage == null) {
	        	return {error:true};
			} else {
				log.error(usage);
				return usage;
			}
		} catch (e) {
		        log.error(e.message);
		        return { error:e,usage:null};
		}
}

function getResponseTimes(subscriberName){
	var log = new Log();
        var store = jagg.module("manager").getCustomBilling();
	var responseTimes = [];
	try {
		log.info("****Before finding ResponseTimes***");
	        responseTimes = store.getResponseTimeData(subscriberName);
		log.info("****After finding ResponseTimes*** "+stringify(responseTimes));
		return {error:false,data : responseTimes};
			
		} catch (e) {
		        log.error(e.message);
		        return { error:true,message:e.message};
		}
}

function getAllSubscribers(){
	var log = new Log();
	var billing = jagg.module("manager").getCustomBilling();
	var subscribers = [];
	try {
		subscribers = billing.getAllSubscribers();
		return {error:false, data : subscribers};
		
		} catch (e) {
			log.error(e.message);
			return { error:true,message:e.message};
		}
	}

function getAllResponseTimes(subscriberName,appName,fromDate,toDate){
	var log = new Log();
    var store = jagg.module("manager").getCustomBilling();
	var responseTimes = [];
	try {
	    	responseTimes = store.getAllResponseTimes(subscriberName,appName,fromDate,toDate);
			return {error:false,data : responseTimes};
			
		} catch (e) {
		    log.error(e.message);
		    return { error:true,message:e.message};
		}
}

function executeDummyQuery(subscriberName,period){

	var billing = jagg.module("manager").getCustomBilling();
	var ret = billing.executeDummyQuery(subscriberName,period);
	return { error:false,usage:ret};

}

function testBillingHostObject(){
var billing = jagg.module("manager").getCustomBilling();
  return {
  error:false
  }

}

function isBillingEnabled() {
  var store = jagg.module("manager").getAPIStoreObj();
  var config = store.isBillingEnabled();
  return {
  error:false,
  isBillingEnabled:config
  }
}


function getDashboardProviderAPIUsage(subscriberName, operator, period) {
        var usage = [];
        var log = new Log();
		if (log.isDebugEnabled()) {
			 log.debug("---------test dashboard------Starting getProviderAPIUsage for : " + subscriberName + " - " + period);

		}
        var store = jagg.module("manager").getCustomBilling();
        try {
	        usage = store.getAPIUsageforSubscriber(subscriberName, period);
	        if (log.isDebugEnabled()) {
	        	log.debug("getProviderAPIUsage for : " + server);
       		}
			
			var processedData = getData(usage, operator)
       		if (log.isDebugEnabled()) {
       			log.debug("api provider usage data " + stringify(processedData))
       		}
			if (processedData == null) {
	        	return {error:true};
			} else {
				return {error:false,usage:processedData};
			}
		} catch (e) {
		        log.error(e.message);
		        return { error:e,usage:null};
		}
}

/*
*  
*/
function getData(usage, selectedOperator){
	var log = new Log()
	var data = [];
	var store = jagg.module("manager").getAPIStoreObj();
	var apiList = store.getAllPublishedAPIs("carbon.super");


	var apis = [];
	for(var i =0; i <apiList.length; i ++){
		apis.push(apiList[i].name)
	}

	//collect api related data for all the subscribers. 
	for(var i =0; i <usage.length; i ++) {
		var applications = usage[i].applications;
		
		for(var j =0 ; j< applications.length; j++){
			
			var subscriptions = applications[j].subscriptions;
			for(var k = 0; k < subscriptions.length; k ++) {
				var subscriptionapi = subscriptions[k].subscriptionapi;
			
				apidata = {};
				apidata.apiName = subscriptionapi;
				apidata.price = "0";
				apidata.tax = "0";
				apidata.credit = "0";
				apidata.currency = "";
				
				var operators = subscriptions[k].operators;

					for(var l = 0; l < operators.length; l ++){
						var operator = operators[l].operator;
						if(selectedOperator == operator){
							apidata.price = operators[l].price;
							apidata.tax =  operators[l].tax;
							apidata.credit = operators[l].credit;
							apidata.currency = operators[l].currency;
							break;
						}

					}
				data.push(apidata)	

			}
		}
	}

	//add same api data to get the total value
	var finalData = [];
	for(var j =0 ; j < apis.length; j ++){
		apidata = {};
		apidata.apiName = apis[j];
		apidata.price = 0;
		apidata.tax =  0;
		apidata.credit = 0;
		apidata.currency = "";

		for(var k =0; k < data.length; k ++) {
			var item = data[k];
	
			if(item.apiName == apidata.apiName) {
				//apidata.price = apidata.price + parseFloat(item.price);
				//apidata.tax = apidata.tax + parseFloat(item.tax);
				//apidata.credit = apidata.credit + parseFloat(item.credit);
				apidata.price += parseFloat(item.price);
				apidata.tax += parseFloat(item.tax);
				apidata.credit += parseFloat(item.credit);
				if(apidata.currency == ""){
					apidata.currency = item.currency;
				}		

			}
		}

		finalData.push(apidata);

	}


	return finalData

}
%>
