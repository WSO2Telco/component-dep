<%
var getAuthServerURL = function() {
    return getAPIStoreObj().getAuthServerURL();
};
var getHTTPsURL = function() {
    return getAPIStoreObj().getHTTPsURL(request.getRequestURL());
};

var getHTTPURL = function() {
    return getAPIStoreObj().getHTTPURL();
};

var getServer = function() {
    return {
        server : "localhost",
        port : "9443"
    };
};

var getAdminCookie = function() {
    // TODO : this should be set in the Context during the deployment

};

var getAPIStoreObj = function() {
    var user = jagg.getUser();
    var store;
    if (user == null) {
        store = require('apistore');
        return new store.APIStore();
    } else {
        store = require('apistore');
        return new store.APIStore(user.username);
    }
};


var getCustomBilling = function() {

    var user = jagg.getUser();
    var billing;
    if (user == null) {
        billing = require('reportservice');
        var billingHostObj = new billing.BillingHostObject();        
        return billingHostObj;
    } else {
        billing = require('reportservice');
        return new billing.BillingHostObject(user.username);
    }
};

var loadTenantRegistry = function (tenantDomain) {
    try {
        if (tenantDomain != null && tenantDomain != "") {
            getAPIStoreObj().loadRegistryOfTenant(tenantDomain);
            return
            {
                error:false
            }
            ;
        }
    } catch (e) {
        return {
            error:true,
            message:e.message
        };
    }    
};

// "WorkflowHostObject" host object.
var getWorkflowHostObject = function() {

    var user = jagg.getUser();
    var workflow;
    if (user == null) {
        workflow = require('reportservice');
        var workflowHostObj = new workflow.WorkflowHostObject();        
        return workflowHostObj;
    } else {
        workflow = require('reportservice');
		var log = new Log();
		log.info("**** workflow : " + workflow);
        return new workflow.WorkflowHostObject(user.username);
    }
};

// get billing service host object
var getBillingServiceHostObject = function() {

	var billingService = require('billingservice');
	var billingServiceHostObject = new billingService.BillingServiceHostObject(); 
	
    return billingServiceHostObject;
};


var getOperatorsHostObject = function() {
    
    var user = jagg.getUser();
    var operatorsHostObject;
    if (user == null) {
        operatorsHostObject = require('operatorservice');
        return operatorsHostObject;
    } else {
        operatorsHostObject = require('operatorservice');
         return new operatorsHostObject.StoreHostObject(user.username);
    }
};

%>
